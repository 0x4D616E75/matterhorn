
This one will just need to iterate over all teams to stop all Aspell
instances once we start one for each team:
src/Matterhorn/App.hs:91:    case finalSt^.csCurrentTeam.tsEditState.cedSpellChecker of

Needs to use the team that the channel cId belongs to:
src/Matterhorn/State/Messages.hs:344:          selMsgId <- use (csCurrentTeam.tsMessageSelect.to selectMessageId)
src/Matterhorn/State/Messages.hs:367:                csCurrentTeam.tsMessageSelect .= MessageSelectState Nothing
src/Matterhorn/State/Messages.hs:382:                  csCurrentTeam.tsMessageSelect .= MessageSelectState (pure $ MessagePostId earliestPId)
src/Matterhorn/State/Messages.hs:394:                  csCurrentTeam.tsMessageSelect .= MessageSelectState (gapMsg^.mMessageId)
src/Matterhorn/State/Messages.hs:403:                  csCurrentTeam.tsMessageSelect .= MessageSelectState (pure $ MessagePostId latestPId)
src/Matterhorn/State/Messages.hs:415:                  csCurrentTeam.tsMessageSelect .= MessageSelectState (gapMsg^.mMessageId)

Needs to use the team for the channel in which the jumped post is located:
src/Matterhorn/State/Messages.hs:907:                      csCurrentTeam.tsMessageSelect .= MessageSelectState (msg^.mMessageId)

Needs to use the team for the channel in which the script was run:
src/Matterhorn/Scripts.hs:50:                mode <- use (csCurrentTeam.tsEditState.cedEditMode)

This lens needs to resolve to the team that was active at the time of the overlay mode switch, NOT csCurrentTeam:
src/Matterhorn/State/ChannelListOverlay.hs:32:    enterListOverlayMode (csCurrentTeam.tsChannelListOverlay) ChannelListOverlay

This lens needs to resolve to the team that was active at the time of the overlay mode switch, NOT csCurrentTeam:
src/Matterhorn/State/UserListOverlay.hs:86:    enterListOverlayMode (csCurrentTeam.tsUserListOverlay) UserListOverlay scope enterHandler getUserSearchResults

This lens needs to resolve to the team that was active at the time of the overlay mode switch, NOT csCurrentTeam:
src/Matterhorn/State/ReactionEmojiListOverlay.hs:42:            enterListOverlayMode (csCurrentTeam.tsReactionEmojiListOverlay) ReactionEmojiListOverlay

All of these uses need to resolve to the team that was active at the time of the overlay mode switch, NOT csCurrentTeam:
src/Matterhorn/State/Flagging.hs:51:              csCurrentTeam.tsPostListOverlay.postListPosts %=
src/Matterhorn/State/Flagging.hs:57:              selId <- use (csCurrentTeam.tsPostListOverlay.postListSelected)
src/Matterhorn/State/Flagging.hs:58:              posts <- use (csCurrentTeam.tsPostListOverlay.postListPosts)
src/Matterhorn/State/Flagging.hs:62:              csCurrentTeam.tsPostListOverlay.postListSelected .= nextId
src/Matterhorn/State/Flagging.hs:63:              csCurrentTeam.tsPostListOverlay.postListPosts %=

These lenses need to resolve to the team based on the cId argument to handleInputSubmission:
src/Matterhorn/State/Editing.hs:224:    csCurrentTeam.tsEditState.cedEditor %= applyEdit Z.clearZipper
src/Matterhorn/State/Editing.hs:225:    csCurrentTeam.tsEditState.cedEphemeral.eesInputHistoryPosition .= Nothing
src/Matterhorn/State/Editing.hs:232:          attachments <- use (csCurrentTeam.tsEditState.cedAttachmentList.L.listElementsL)
src/Matterhorn/State/Editing.hs:233:          mode <- use (csCurrentTeam.tsEditState.cedEditMode)
src/Matterhorn/State/Editing.hs:244:    csCurrentTeam.tsEditState.cedEditMode .= NewPost

This lens needs to use the team ID effective when the spell check request was made:
src/Matterhorn/State/Editing.hs:406:                        csCurrentTeam.tsEditState.cedMisspellings .= allMistakes

The team ID argument here needs to be an argument to setCompletionAlternatives and should then be used throughout this function:
src/Matterhorn/State/Autocomplete.hs:329:   tId <- use csCurrentTeamId

This lens should resolve to the team owning the channel in question:
src/Matterhorn/State/Channels.hs:157:               then use (csCurrentTeam.tsRecentChannel)

This lens should resolve to the team owning the channel in question:
src/Matterhorn/State/Channels.hs:435:    ch <- use (csCurrentTeam.tsPendingChannelChange)

These should resolve to the team owning the channel in question:
src/Matterhorn/State/Channels.hs:499:            csCurrentTeam.tsPendingChannelChange .= Nothing
src/Matterhorn/State/Channels.hs:512:                                csCurrentTeam.tsPendingChannelChange .=
src/Matterhorn/State/Channels.hs:524:                                csCurrentTeam.tsPendingChannelChange .=

These should resolve to the team owning the channel in question:
src/Matterhorn/State/Channels.hs:731:            csCurrentTeam.tsFocus %= Z.filterZipper ((/= cId) . channelListEntryChannelId)

These should resolve to the team owning the channel in question:
src/Matterhorn/State/Channels.hs:1062:            csCurrentTeam.tsPendingChannelChange .= (Just $ ChangeByChannelId chanId act)
src/Matterhorn/State/Channels.hs:1078:            csCurrentTeam.tsPendingChannelChange .= (Just $ ChangeByUserId $ user^.uiId)

csCurrentTeamId:

This team ID should be an argument to refreshChannelsAndUsers:
src/Matterhorn/State/Channels.hs:265:    myTId <- use csCurrentTeamId

This team ID should be the one that owns the channel provided to refreshChannel:
src/Matterhorn/State/Channels.hs:310:    myTId <- use csCurrentTeamId

This team ID should be the one that owns the channel provided to updateChannelNotifyProps:
src/Matterhorn/State/Channels.hs:1141:    tId <- use csCurrentTeamId

src/Matterhorn/State/Attachments.hs:44:    tId <- use csCurrentTeamId
src/Matterhorn/State/Attachments.hs:52:    tId <- use csCurrentTeamId
src/Matterhorn/State/PostListOverlay.hs:91:      tId <- use csCurrentTeamId
src/Matterhorn/State/ChannelListOverlay.hs:30:    myTId <- use csCurrentTeamId
src/Matterhorn/State/ChannelSelect.hs:27:    tId <- use csCurrentTeamId
src/Matterhorn/State/ChannelTopicWindow.hs:18:    tId <- use csCurrentTeamId
src/Matterhorn/State/UrlSelect.hs:25:    tId <- use csCurrentTeamId
src/Matterhorn/State/NotifyPrefs.hs:84:        tId <- use csCurrentTeamId
src/Matterhorn/State/UserListOverlay.hs:39:    myTId <- use csCurrentTeamId
src/Matterhorn/State/UserListOverlay.hs:58:    myTId <- use csCurrentTeamId
src/Matterhorn/State/UserListOverlay.hs:70:    myTId <- use csCurrentTeamId
src/Matterhorn/State/MessageSelect.hs:120:    tId <- use csCurrentTeamId
src/Matterhorn/Command.hs:279:  tId      <- use csCurrentTeamId
src/Matterhorn/LastRunState.hs:78:        tId = cs^.csCurrentTeamId
src/Matterhorn/Types.hs:148:  , csCurrentTeamId
src/Matterhorn/Types.hs:1956:csCurrentTeamId :: SimpleGetter ChatState TeamId
src/Matterhorn/Types.hs:1957:csCurrentTeamId = csCurrentTeam.tsTeam.teamIdL
src/Matterhorn/Types.hs:2076:                          cc^.ccInfo.cdTeamId == (Just $ st^.csCurrentTeamId)
src/Matterhorn/Types.hs:2203:    let tId = st^.csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:105:        tId = st^.csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:131:        tId = st^.csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:169:           tId <- use csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:173:           tId <- use csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:177:           tId <- use csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:181:           tId <- use csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:185:           tId <- use csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:189:           tId <- use csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:193:           tId <- use csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:197:           tId <- use csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:201:           tId <- use csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:205:           tId <- use csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:216:           tId <- use csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:220:           tId <- use csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:224:           tId <- use csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:228:           tId <- use csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:232:           tId <- use csCurrentTeamId
src/Matterhorn/Windows/ViewMessage.hs:236:           tId <- use csCurrentTeamId
src/Matterhorn/Events/ManageAttachments.hs:85:            tId <- use csCurrentTeamId
src/Matterhorn/Draw/Main.hs:231:        tId = st^.csCurrentTeamId
src/Matterhorn/Draw/Main.hs:594:    tId = st^.csCurrentTeamId
src/Matterhorn/Draw/TabbedWindow.hs:31:        tId = cs^.csCurrentTeamId
src/Matterhorn/Draw/ChannelList.hs:81:        tId = st^.csCurrentTeamId
src/Matterhorn/Draw/ChannelTopicWindow.hs:47:        tId = st^.csCurrentTeamId
src/Matterhorn/Events.hs:227:    myTId <- use csCurrentTeamId
